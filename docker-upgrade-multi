#!/bin/bash
set -e

# PostgreSQL Multi-Version Upgrade Script
# Usage: docker-upgrade-multi [FROM_VERSION TO_VERSION]
# 
# This is a wrapper script that delegates to Taskfile tasks

# Run as postgres user if started as root
if [ "$(id -u)" = '0' ]; then
    # Switch to postgres user - cannot change ownership of mounted volumes
    exec gosu postgres "$BASH_SOURCE" "$@"
fi

# Check if explicit versions provided
if [ $# -eq 2 ]; then
    FROM_VERSION="$1"
    TO_VERSION="$2"
    
    echo "üîß Upgrading from PostgreSQL $FROM_VERSION to $TO_VERSION"
    
    # Validate versions
    if [[ ! "$FROM_VERSION" =~ ^(14|15|16)$ ]] || [[ ! "$TO_VERSION" =~ ^(15|16|17)$ ]]; then
        echo "‚ùå Invalid version. FROM_VERSION must be 14, 15, or 16. TO_VERSION must be 15, 16, or 17."
        exit 1
    fi

    if [ "$FROM_VERSION" -ge "$TO_VERSION" ]; then
        echo "‚ùå FROM_VERSION must be less than TO_VERSION"
        exit 1
    fi
    
    # Set environment variables and delegate to Taskfile
    export FROM_VERSION=$FROM_VERSION
    export TO_VERSION=$TO_VERSION
    
    # Use the sequential upgrade task
    task run:sequential-upgrade FROM=$FROM_VERSION TO=$TO_VERSION
    
    echo "========================================="
    echo "All upgrades completed successfully!"
    echo "Final version: PostgreSQL $TO_VERSION"
    echo "========================================="
    
else
    echo "‚ùå Invalid number of arguments"
    echo "Usage: $0 FROM_VERSION TO_VERSION"
    exit 1
fi