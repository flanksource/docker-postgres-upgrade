# Default values for postgres-upgrade chart

# Main PostgreSQL container (Supabase)
postgresql:
  image:
    registry: docker.io
    repository: supabase/postgres
    tag: "15.1.0.147"
    pullPolicy: IfNotPresent

# PostgreSQL upgrade init container
upgradeContainer:
  image:
    registry: ghcr.io
    repository: flanksource/postgres-upgrade
    # Tag options: to-15-latest, to-16-latest, to-17-latest
    tag: "to-17-latest"
    pullPolicy: IfNotPresent
  
  # Whether to run upgrade on startup
  enabled: true

# PostgreSQL database configuration
database:
  # PostgreSQL version to run (will upgrade to this version on startup if data exists)
  version: "17"
  
  # Database configuration
  name: postgres
  username: postgres
  # Leave password empty to generate a random one
  password: ""
  
  # Admin password reset on startup (handled by init container)
  resetPassword: false
  
  # Automatic upgrade on startup (handled by init container)
  autoUpgrade: true
  
  # PostgreSQL configuration settings
  # These will be dynamically adjusted based on resource limits if not explicitly set
  config:
    # Memory settings (will be auto-calculated if not set)
    shared_buffers: ""
    effective_cache_size: ""
    work_mem: ""
    maintenance_work_mem: ""
    
    # Connection settings
    max_connections: "100"
    
    # WAL settings
    wal_buffers: ""
    checkpoint_completion_target: "0.9"
    
    # Performance settings
    random_page_cost: "1.1"
    effective_io_concurrency: "200"
    
    # Custom configuration (key-value pairs)
    custom: {}

# Resource configuration
resources:
  limits:
    cpu: 2000m
    memory: 4Gi
  requests:
    cpu: 500m
    memory: 1Gi

# Persistence configuration
persistence:
  enabled: true
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 10Gi
  annotations: {}

# Service configuration
service:
  type: ClusterIP
  port: 5432
  targetPort: 5432
  annotations: {}

# ServiceAccount configuration
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Pod security context
podSecurityContext:
  fsGroup: 999
  runAsUser: 999
  runAsGroup: 999

# Container security context
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 999

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}

# Pod annotations
podAnnotations: {}

# Pod labels
podLabels: {}

# Startup probe configuration
startupProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 30
  successThreshold: 1

# Readiness probe configuration
readinessProbe:
  enabled: true
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1

# Liveness probe configuration
livenessProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 30
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1

# Init containers
initContainers: []

# Additional volumes
extraVolumes: []

# Additional volume mounts
extraVolumeMounts: []

# Environment variables
env: []

# PodDisruptionBudget
podDisruptionBudget:
  enabled: false
  minAvailable: 1

# Metrics configuration (for monitoring integration)
metrics:
  enabled: false
  serviceMonitor:
    enabled: false
    namespace: ""
    labels: {}
    annotations: {}

# Network policy
networkPolicy:
  enabled: false
  ingress: []
  egress: []