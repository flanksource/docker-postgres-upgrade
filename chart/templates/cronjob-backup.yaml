{{/*
Backup CronJob for WAL-G automated backups
*/}}
{{- if .Values.backup.enabled }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "postgres-upgrade.fullname" . }}-backup
  labels:
    {{- include "postgres-upgrade.labels" . | nindent 4 }}
    app.kubernetes.io/component: backup
spec:
  schedule: {{ .Values.backup.schedule | quote }}
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            {{- include "postgres-upgrade.labels" . | nindent 12 }}
            app.kubernetes.io/component: backup
        spec:
          restartPolicy: OnFailure
          serviceAccountName: {{ include "postgres-upgrade.serviceAccountName" . }}
          containers:
          - name: wal-g-backup
            image: "{{ .Values.postgresql.image.registry }}/{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
            imagePullPolicy: {{ .Values.postgresql.image.pullPolicy }}
            command:
              - /usr/local/bin/wal-g-backup.sh
            env:
              # PostgreSQL connection
              - name: PGHOST
                value: {{ include "postgres-upgrade.fullname" . }}-postgresql
              - name: PGPORT
                value: "5432"
              - name: PGUSER
                value: {{ .Values.postgresql.database.username | quote }}
              - name: PGDATABASE
                value: {{ .Values.postgresql.database.name | quote }}
              {{- if .Values.postgresql.database.password }}
              - name: PGPASSWORD
                valueFrom:
                  secretKeyRef:
                    name: {{ include "postgres-upgrade.fullname" . }}-secret
                    key: postgres-password
              {{- end }}
              
              # WAL-G configuration
              - name: WALG_ENABLED
                value: "true"
              - name: WALG_COMPRESSION_METHOD
                value: {{ .Values.backup.walg.compressionMethod | quote }}
              {{- if .Values.backup.walg.retainCount }}
              - name: WALG_RETAIN_COUNT
                value: {{ .Values.backup.walg.retainCount | quote }}
              {{- end }}
              
              {{- if .Values.backup.walg.storage.s3.enabled }}
              - name: WALG_S3_PREFIX
                value: {{ .Values.backup.walg.storage.s3.prefix | quote }}
              - name: AWS_REGION
                value: {{ .Values.backup.walg.storage.s3.region | quote }}
              - name: AWS_ACCESS_KEY_ID
                valueFrom:
                  secretKeyRef:
                    name: {{ include "postgres-upgrade.fullname" . }}-backup-secret
                    key: aws-access-key-id
              - name: AWS_SECRET_ACCESS_KEY
                valueFrom:
                  secretKeyRef:
                    name: {{ include "postgres-upgrade.fullname" . }}-backup-secret
                    key: aws-secret-access-key
              {{- end }}
              
              {{- if .Values.backup.walg.storage.gcs.enabled }}
              - name: WALG_GCS_PREFIX
                value: {{ .Values.backup.walg.storage.gcs.prefix | quote }}
              - name: GOOGLE_APPLICATION_CREDENTIALS
                value: "/etc/wal-g/gcs-credentials.json"
              {{- end }}
              
              {{- if .Values.backup.walg.storage.azure.enabled }}
              - name: WALG_AZURE_PREFIX
                value: {{ .Values.backup.walg.storage.azure.prefix | quote }}
              - name: AZURE_STORAGE_ACCOUNT
                valueFrom:
                  secretKeyRef:
                    name: {{ include "postgres-upgrade.fullname" . }}-backup-secret
                    key: azure-storage-account
              - name: AZURE_STORAGE_ACCESS_KEY
                valueFrom:
                  secretKeyRef:
                    name: {{ include "postgres-upgrade.fullname" . }}-backup-secret
                    key: azure-storage-access-key
              {{- end }}
            
            {{- if .Values.backup.walg.storage.gcs.enabled }}
            volumeMounts:
              - name: gcs-credentials
                mountPath: /etc/wal-g
                readOnly: true
            {{- end }}
            
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                cpu: 500m
                memory: 1Gi
          
          {{- if .Values.backup.walg.storage.gcs.enabled }}
          volumes:
            - name: gcs-credentials
              secret:
                secretName: {{ include "postgres-upgrade.fullname" . }}-backup-secret
          {{- end }}
{{- end }}